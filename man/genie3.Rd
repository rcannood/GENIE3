% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genie3.R
\name{genie3}
\alias{genie3}
\title{Compute weighted adjacency matrix of inferred network}
\usage{
genie3(data, regulators = seq_len(ncol(data)),
  targets = seq_len(ncol(data)), K = "sqrt", nb.trees = 1000,
  importance.measure = "IncNodePurity", seed = NULL, trace = TRUE,
  mc.cores = 1)
}
\arguments{
\item{data}{A matrix of observations of the different features. The rows must contain the observations.}

\item{regulators}{A set of indices or column names of entities whose observed values regulate the observed values of the targets.}

\item{targets}{A set of indices or column names of entities whose observed values are regulated by the regulators.}

\item{K}{The choice of number of input genes randomly selected as candidates at each node. Must be \code{"all"} for all input features, \code{"sqrt"} for the square root of all input features (default), or an integer.}

\item{nb.trees}{The number of trees in ensemble for each target gene (default 1000).}

\item{importance.measure}{Type of variable importance measure. Must be either \code{"IncNodePurity"} for the importance measure based on decrease of residual sum of squares, or \code{"\%IncMSE"} for importance measure optained by permutation of OOB data.}

\item{seed}{A random number generator seed for replication of analyses. NULL means the seed is not set.}

\item{trace}{Output additional information.}

\item{mc.cores}{The number of threads to use for parallel execution.\code{\link{genie3}}}
}
\value{
The weighted adjacency matrix of inferred network.
}
\description{
Compute weighted adjacency matrix of inferred network
}
\examples{
library(GENIE3)
data <- matrix(runif(100*100), ncol=100)
true.matrix <- matrix(sample(0:1, 20*100, replace=TRUE, prob=c(.9, .1)), ncol=10)
diag(true.matrix) <- 0
weights <- genie3(data, regulators=1:20, targets=1:100, mc.cores=8)
ranking <- get.ranking(weights)
evaluation <- evaluate.ranking(ranking, true.matrix=true.matrix)
evaluation$au.score

# draw a ROC curve
library(ggplot2)
ggplot(evaluation$metrics, aes(fpr, rec)) + geom_line() + coord_cartesian(xlim = c(0, 1), ylim=c(0, 1)) + theme_minimal()

# draw a PR curve
ggplot(evaluation$metrics, aes(rec, prec)) + geom_line() + coord_cartesian(xlim = c(0, 1), ylim=c(0, .1)) + theme_minimal()

# Evaluate multiple rankings at the same time
weights.cor <- as.matrix(abs(cor(weights[,1:20], weights[,1:100])))
ranking.cor <- get.ranking(weights.cor)
rankings <- list(GENIE3=ranking, Correlation=ranking.cor)
evaluations <- evaluate.multiple.rankings(rankings, true.matrix=true.matrix)
evaluations$au.score

# draw a ROC curve
ggplot(evaluations$metrics, aes(fpr, rec, colour=ranking.name)) + geom_line() + coord_cartesian(xlim = c(0, 1), ylim=c(0, 1)) + theme_minimal()

# draw a PR curve
ggplot(evaluations$metrics, aes(rec, prec, colour=ranking.name)) + geom_line() + coord_cartesian(xlim = c(0, 1), ylim=c(0, .1)) + theme_minimal()
}
\references{
Huynh-Thu, V. A. et al. (2010) Inferring Regulatory Networks from Expression Data Using Tree-Based Methods. PLoS ONE.
}

